<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd  
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd"
	default-autowire="byType">

	<context:annotation-config />

	<context:component-scan base-package="com.mpms.dao" />
	<context:component-scan base-package="com.mpms.service" />

	<!-- 将多个配置文件读取到容器中，交给Spring管理 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>

	<!-- 数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />


		<property value="stat" name="filters"></property>
		<property value="50" name="maxActive" />
		<property value="1" name="initialSize" />
		<property value="60000" name="maxWait" />
		<property value="1" name="minIdle" />
		<property value="60000" name="timeBetweenEvictionRunsMillis" />
		<property value="300000" name="minEvictableIdleTimeMillis" />
		<property value="SELECT 'x'" name="validationQuery" />
		<property value="true" name="testWhileIdle" />
		<property value="false" name="testOnBorrow" />
		<property value="false" name="testOnReturn" />
		<property value="true" name="poolPreparedStatements" />
		<property value="20" name="maxPoolPreparedStatementPerConnectionSize" />
		<property name="removeAbandoned" value="true" />
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.mpms.common.po</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.connection.autocommit">true</prop>  
				<!-- <prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JDBCTransactionFactory</prop> -->
			</props>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="nestedTransactionAllowed" value="true"></property>
	</bean>
	<!-- 注解事物 -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true" /> -->
	<aop:config proxy-target-class="true" />
	<!-- 注解事物 -->
	<aop:aspectj-autoproxy expose-proxy="true" />
	<tx:annotation-driven transaction-manager="transactionManager" />

</beans>